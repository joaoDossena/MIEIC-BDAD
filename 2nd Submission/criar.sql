PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE PessoaFEUP (id STRING PRIMARY KEY UNIQUE, nome STRING, morada STRING, dataNasc DATE, sexo CHAR CHECK (sexo LIKE 'M' OR 'F'), NIF INTEGER UNIQUE, telefone INTEGER UNIQUE);
CREATE TABLE Estudante (id REFERENCES PessoaFEUP (id) PRIMARY KEY UNIQUE, anoInscricao INTEGER, idCurso REFERENCES Curso (idCurso));
CREATE TABLE Docente (id STRING REFERENCES PessoaFEUP (id) PRIMARY KEY UNIQUE, categoria STRING, departamento STRING);
CREATE TABLE Curso (idCurso STRING PRIMARY KEY UNIQUE, nome STRING, grauAcademico STRING, duracao INTEGER, mediaEntrada INTEGER CHECK (mediaEntrada >= 0 AND mediaEntrada <= 20), dataInicio DATE);
CREATE TABLE Cadeira (cadeiraID STRING PRIMARY KEY UNIQUE, nome STRING, creditos INTEGER, idCurso STRING REFERENCES Curso (idCurso));
CREATE TABLE OcorrenciaCadeira (idOcorrenciaCadeira STRING PRIMARY KEY UNIQUE, cadeiraID STRING REFERENCES Cadeira (codigo));
CREATE TABLE Epoca (idEpoca STRING PRIMARY KEY UNIQUE, anoLetivo STRING, semestre STRING CHECK (semestre LIKE "Primeiro" OR "Segundo"));
CREATE TABLE ComponenteAvaliacao (idComponenteAvaliacao STRING PRIMARY KEY UNIQUE, nome STRING, idOcorrenciaCadeira STRING REFERENCES OcorrenciaCadeira (idOcorrenciaCadeira));
CREATE TABLE Nota (idNota STRING PRIMARY KEY UNIQUE, nota DOUBLE, idComponenteAvaliacao STRING REFERENCES ComponenteAvaliacao (idComponenteAvaliacao));
CREATE TABLE EstudanteOcorrenciaCadeira (id STRING REFERENCES Estudante (id), idOcorrenciaCadeira STRING REFERENCES OcorrenciaCadeira (idOcorrenciaCadeira));
CREATE TABLE EstudanteComponenteAvaliacao (id STRING REFERENCES Estudante (id), idComponenteAvaliacao STRING REFERENCES ComponenteAvaliacao (idComponenteAvaliacao));
CREATE TABLE EstudanteTurmaPratica (id STRING REFERENCES Estudante (id), idTurmaPratica STRING REFERENCES TurmaPratica (idTurmaPratica));
CREATE TABLE DocenteTurmaPratica (id STRING REFERENCES Docente (id), idTurmaPratica STRING REFERENCES TurmaPratica (idTurmaPratica));
CREATE TABLE CadeiraDocente (id STRING REFERENCES Docente (id), cadeiraID STRING REFERENCES Cadeira (cadeiraID));
CREATE TABLE OcorrenciaCadeiraEpoca (idOcorrenciaCadeira STRING REFERENCES OcorrenciaCadeira (idOcorrenciaCadeira), idEpoca STRING REFERENCES Epoca (idEpoca));
CREATE TABLE TurmaPratica (idTurmaPratica STRING PRIMARY KEY UNIQUE, numEstudantes INTEGER, diaSemana STRING CHECK (diaSemana LIKE "Segunda-Feira" OR "TerÃ§a-Feira" OR "Quarta-Feira" OR "Quinta-Feira" OR "Sexta-Feira"), horaInicio TIME, cadeiraID STRING REFERENCES Cadeira (cadeiraID), horaFim TIME);
COMMIT;
